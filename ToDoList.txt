Programming To-do List
Benjamin Camp
(Name of bot?) Athene Cunicularia (Burrowing Owl :P)
NASA Robotics Mining Competition




As of 11/25/2015
****************************************************************
Improve the command_get program:
- Segment the program into controller_detect and command_get. Have overarching 

- Remove any extraneous elements from the program. (Not certain there are any)

- Format the data from the controller into simple commands for the bot. Need to test the raw data from the controller. The sticks and triggers appear to combine their values. It's really annoying.

- Create GUI to show which buttons are doing what and how the bot has responded.

- Probably some other stuff I'm unaware of or have forgotten.



Set up communications:
- Set the routers and Pi up with whatever computer we will be using for the competition.

- Ensure that the Pi and the computer can receive signals from each other at the same time.

- Implement SSID channel switching. (Make damn sure we are on the right channel, this will get us disqualified if we are not)

- Implement the spectral mask (I have no idea what that is or if it even a programmer issue).

- (Optional) Implement encryption.

- Remember to monitor the bandwidth usage. We can't go over an average of 5000 kb/s 

- Probably some other stuff I'm unaware of or have forgotten.



Data compression:
- Implement algorithm to compress the visual data coming from the Pi. Most likely will use Python implementation, maybe use onboard Wolfram Alpha if demonstratably better, which is unlikely given that the program's overhead is likely to be large. Please don't forget to make the decompression part...

- Stream or burst?

- Probably some other stuff I'm unaware of or have forgotten.



Artificial Intelligence:
- Because I want this really, really bad.. Right now there is no point until we have everything else ready.



Other stuff I haven't written:




As of 11/19/2015
****************************************************************
Improve the command_get program:
- Segment the program into controller_detect and command_get.

- Remove any extraneous elements from the program.

- Implement a pause to reduce the amount of data coming from the controller. (Supposedly this program has problems with handling real-time. All I've done is watch the data come in, not see it in action. I'll look into it.)

- Format the data from the controller into simple commands for the bot. 

- Create GUI to show which buttons are doing what and how the bot has responded.

- Probably some other stuff I'm unaware of or have forgotten.



Set up communications:
- Set the routers and Pi up with whatever computer we will be using for the competition.

- Ensure that the Pi and the computer can receive signals from each other at the same time.

- Implement SSID channel switching. (Make damn sure we are on the right channel, this will get us disqualified if we are not)

- Implement the spectral mask (I have no idea what that is or if it even a programmer issue).

- (Optional) Implement encryption.

- Remember to monitor the bandwidth usage. We can?t go over an average of 5000 kb/s 

- Probably some other stuff I'm unaware of or have forgotten.



Data compression:
- Implement algorithm to compress the visual data coming from the Pi. Most likely will use Python implementation, maybe use onboard Wolfram Alpha if demonstratably better, which is unlikely given that the program's overhead is likely to be large. Please don't forget to make the decompression part...

- Stream or burst?

- Probably some other stuff I'm unaware of or have forgotten.



Artificial Intelligence:
- Because I want this really, really bad.. Right now there is no point until we have everything else ready.



Other stuff I haven't written: